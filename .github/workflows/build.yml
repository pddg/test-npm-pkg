name: Test and Build

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "v*"
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencied
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Run lint
        run: |
          npm run lint
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node:
          - '12'
          - '14'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/cache@v2
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencied
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          npm ci
      - name: Run Build
        run: |
          npm run build
      - name: Run tests
        run: |
          npm run test
  check-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - lint
      - test-and-build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: -1
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Create tag if it does not exist
        run: |
          TAG=v$(jq -r ".version" package.json)
          if git show-ref --tags | grep -q "refs/tags/${TAG}"
          then
            echo "${TAG} exists. Skipped."
            exit
          else
            git tag ${TAG}
            git push origin --tags
          fi
